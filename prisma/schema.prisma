// This is your Prisma schema file
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(auto()) @map("_id")
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // Profile information
  bio           String?   @db.Text
  gender        String?
  birthDate     DateTime?
  location      String?
  
  // Relationships
  likes         Like[]    @relation("UserLikes")
  likedBy       Like[]    @relation("UserLikedBy")
  matches       Match[]
  
  // Auth
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Like {
  id        String   @id @default(auto()) @map("_id")
  likerId   String
  likedId   String
  createdAt DateTime @default(now())
  
  liker     User     @relation("UserLikes", fields: [likerId], references: [id], onDelete: Cascade)
  liked     User     @relation("UserLikedBy", fields: [likedId], references: [id], onDelete: Cascade)
  
  @@unique([likerId, likedId])
}

model Match {
  id        String   @id @default(auto()) @map("_id")
  users     User[]
  createdAt DateTime @default(now())
}
